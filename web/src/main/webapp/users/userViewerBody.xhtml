<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:t="http://myfaces.apache.org/tomahawk"
	xmlns:s="http://myfaces.apache.org/sandbox"
	xmlns:ss="http://screensaver.med.harvard.edu/ui">

<ui:composition template="/util/entityViewerDetails.xhtml">

	<ui:param name="entity" value="#{userViewer.entity}" />
  <ui:param name="viewer" value="#{userViewer}" />
  

	<ui:define name="entityCommands">
    <t:commandButton id="browseScreensCommand" value="Browse Screens"
      action="#{userViewer.browseScreens}"
      rendered="#{userViewer.readAdmin &amp;&amp; !userViewer.editMode}"
      styleClass="command" />
    <t:commandButton action="#{userViewer.addScreen}"
			id="addScreenCommand" value="Add Screen..."
			rendered="#{userViewer.screensaverUser.isUserInRoleOfNameMap['screensAdmin'] &amp;&amp; !userViewer.editMode &amp;&amp; userViewer.screeningRoomUserViewMode}"
			styleClass="command" />
    <t:commandButton action="#{userViewer.addServiceActivity}"
      id="addServiceActivityCommand" value="Add Service Activity..."
      rendered="#{userViewer.screensaverUser.isUserInRoleOfNameMap['serviceActivityAdmin']  &amp;&amp; !userViewer.editMode &amp;&amp; userViewer.screeningRoomUserViewMode}"
      styleClass="command" />
    <t:commandButton action="smUpdateUserAgreement"
      id="smUpdateUserAgreement" value="Update SM User Agreement..."
      rendered="#{smUserAgreementUpdaterUi.enabled &amp;&amp; userViewer.editable &amp;&amp; !userViewer.editMode &amp;&amp; userViewer.screeningRoomUserViewMode}"
      styleClass="command" />
    <t:commandButton action="rnaiUpdateUserAgreement"
      id="rnaiUpdateUserAgreement" value="Update RNAi User Agreement..."
      rendered="#{rnaiUserAgreementUpdaterUi.enabled &amp;&amp; userViewer.editable &amp;&amp; !userViewer.editMode &amp;&amp; userViewer.screeningRoomUserViewMode}"
      styleClass="command" />
	</ui:define>

	<ui:define name="propertiesContent">
		<ss:property id="fullName" label="Name"
			description="The name and email of the user"
			value="#{userViewer.entity.fullNameFirstLast}" required="true"
			rendered="#{!userViewer.editMode}" primary="true"/>

		<ss:property id="firstName" label="First Name"
			description="The user's first name"
			value="#{userViewer.entity.firstName}"
			rendered="#{userViewer.editMode}" editable="#{userViewer.editMode}"
			editWidth="60" />

		<ss:property id="lastName" label="Last Name"
			description="The user's last name (surname)"
			value="#{userViewer.entity.lastName}" required="true"
			rendered="#{userViewer.editMode}" editable="#{userViewer.editable}"
			editWidth="60" />

    <ss:property id="labName" label="Lab Name"
      description="The name of the user's current lab"
      value="#{userViewer.entity.lab.labName}" primary="true"
      rendered="#{!userViewer.editMode || !userViewer.entity.headOfLab}"
      editable="#{userViewer.editMode &amp;&amp; (userViewer.screensaverUser.isUserInRoleOfNameMap['labHeadsAdmin'] || empty userViewer.entity.entityId)}">
      <ui:define name="data">
        <ss:labName user="#{userViewer.entity}" />
      </ui:define>
      <ui:define name="editableData">
        <t:selectOneMenu id="labNameMenu"
          value="#{userViewer.labName.value}"
          required="#{!userViewer.screensaverUser.isUserInRoleOfNameMap['labHeadsAdmin'] &amp;&amp; empty userViewer.entity.entityId}"
          styleClass="inputText selectMenu">
          <f:selectItems value="#{userViewer.labName.selectItems}" />
        </t:selectOneMenu>
      </ui:define>
    </ss:property>

    <ss:property id="labAffiliation" label="#{'Lab Affiliation'}"
      description="The organization the user is affiliated with (usually via his/her lab)"
      value="#{userViewer.entity.lab.labAffiliation.affiliationName}"
      rendered="#{userViewer.editMode &amp;&amp; userViewer.entity.headOfLab}"
      editable="true">
      <ui:define name="editableData">
        <t:selectOneMenu id="labAffiliationMenu"
          value="#{userViewer.labAffiliation.value}"
          styleClass="inputText selectMenu">
          <f:selectItems value="#{userViewer.labAffiliation.selectItems}" />
        </t:selectOneMenu>

        <t:div id="newLabAffiliationDiv" styleClass="groupingPanel">
          <t:panelGrid columns="1" columnClasses="column">
            <ss:propertyGroup id="newLabAffiliationGroup"
              label="New Affiliation (optional)">
              <ss:property id="newLabAffiliationName" label="Name"
                description="The name of the new affiliation to be created"
                value="#{userViewer.newLabAffiliation.affiliationName}"
                editable="true" editWidth="60" />
              <ss:property id="newLabAffiliationCategory" label="Category"
                description="The name of the new affiliation to be created"
                value="#{userViewer.newLabAffiliation.affiliationCategory}"
                editable="true">
                <ui:define name="editableData">
                  <t:selectOneMenu id="affiliationCategoryMenu" value="#{value}"
                    styleClass="inputText selectMenu"
                    converter="#{affiliationCategoryConverter}">
                    <f:selectItems
                      value="#{userViewer.affiliationCategorySelections}" />
                  </t:selectOneMenu>
                </ui:define>
              </ss:property>
            </ss:propertyGroup>
          </t:panelGrid>
          <t:commandButton id="addNewLabAffiliation" value="Add"
            action="#{userViewer.addNewLabAffiliation}" />
        </t:div>
      </ui:define>
    </ss:property>
    
    <ss:property id="labHeadAppointmentCategory" label="App't Category"
      description="The Lab Head Appointment Category"
      value="#{userViewer.entity.labHeadAppointmentCategory}"
      rendered="#{userViewer.entity.headOfLab}"
      editable="#{userViewer.editMode &amp;&amp; (userViewer.screensaverUser.isUserInRoleOfNameMap['labHeadsAdmin'] )}"
      converter="#{labHeadAppointmentCategoryConverter}"
      required="false">
      <ui:define name="editableData">
        <t:selectOneMenu id="labHeadAppointmentCategoryMenu"
          value="#{userViewer.entity.labHeadAppointmentCategory}"
          converter="#{labHeadAppointmentCategoryConverter}"
          required="false" styleClass="inputText selectMenu">
          <f:selectItems value="#{userViewer.labHeadAppointmentCategorySelections}" />
        </t:selectOneMenu>
      </ui:define>
    </ss:property>

    <ss:property id="labHeadAppointmentDepartment" label="App't Department"
      description="The Lab Head Appointment Department"
      value="#{userViewer.entity.labHeadAppointmentDepartment}"
      rendered="#{userViewer.entity.headOfLab}"
      editable="#{userViewer.editMode &amp;&amp; (userViewer.screensaverUser.isUserInRoleOfNameMap['labHeadsAdmin'] )}"
      converter="#{labHeadAppointmentDepartmentConverter}"
      required="false">
      <ui:define name="editableData">
        <t:selectOneMenu id="labHeadAppointmentDepartmentMenu"
          value="#{userViewer.entity.labHeadAppointmentDepartment}"
          converter="#{labHeadAppointmentDepartmentConverter}"
          required="false" styleClass="inputText selectMenu">
          <f:selectItems value="#{userViewer.labHeadAppointmentDepartmentSelections}" />
        </t:selectOneMenu>
      </ui:define>
    </ss:property>

    <ss:property id="labHeadAppointmentUpdateDate" type="Date"
      label="Date App't Updated"
      description="The date when Lab Head Appointment was set"
      value="#{userViewer.entity.labHeadAppointmentUpdateDate}"
      rendered="#{userViewer.entity.headOfLab}"
      editable="#{userViewer.editMode &amp;&amp; (userViewer.screensaverUser.isUserInRoleOfNameMap['labHeadsAdmin'] )}"
      >
    </ss:property>


		<ss:property id="email" label="Email"
			description="The user's email address "
			value="#{userViewer.entity.email}" editable="#{userViewer.editMode}"
			editWidth="60" />

    <ss:property id="loginId" label="#{userViewer.applicationProperties.map['screensaver.ui.application_name']} Login ID"
      description="The user's login ID"
      value="#{userViewer.entity.loginId}"
      rendered="#{userViewer.manageAuthenticationCredentialsFeatureEnabled &amp;&amp; (userViewer.readAdmin || userViewer.me)}"
      editable="#{userViewer.editMode}" />

    <!-- Warning: passwords will be sent in plain text unless HTTPS is used -->
    <ss:propertyGroup id="newPassword" label="Update password (leave empty to keep existing password)" description="(Re)set the user's password"
        rendered="#{userViewer.manageAuthenticationCredentialsFeatureEnabled &amp;&amp; userViewer.editMode}" editable="#{userViewer.editMode}" adminOnly="true" >
      <ss:property id="newPassword1" label="New password"
        description="Enter the new password">
        <ui:define name="editableData">
          <t:inputSecret value="#{userViewer.newPassword1}" 
            styleClass="inputText" />
        </ui:define>
      </ss:property>
      <ss:property id="newPassword2" label="Confirm password"
        description="Enter the new password again">
        <ui:define name="editableData">
          <t:inputSecret value="#{userViewer.newPassword2}" 
            styleClass="inputText" />
        </ui:define>
      </ss:property>
    </ss:propertyGroup>

    <ss:property id="ecommonsId" label="eCommons ID"
      description="The user's eCommons ID"
      value="#{userViewer.entity.ECommonsId}"
      rendered="#{userViewer.applicationProperties.facilityKey == 'iccbl' &amp;&amp; (userViewer.readAdmin || userViewer.me)}"
      editable="#{userViewer.editMode}"
      converter="#{toLowerCaseConverter}" />

    <ss:property id="harvardId" label="Harvard ID"
      description="The user's Harvard ID " value="#{userViewer.entity.harvardId}"
      rendered="#{userViewer.applicationProperties.facilityKey == 'iccbl' &amp;&amp; (userViewer.readAdmin || userViewer.me)}"
      editable="#{userViewer.editMode}" />

    <ss:property id="harvardIdExpiration" type="Date"
      label="Harvard ID Actual Expiration Date"
      description="The date when the user's Harvard ID will expire"
      value="#{userViewer.entity.harvardIdExpirationDate}"
      rendered="#{userViewer.applicationProperties.facilityKey == 'iccbl' &amp;&amp; (userViewer.readAdmin || userViewer.me)}"
      editable="#{userViewer.editMode}">
      <!-- TODO: ui:define name="valueFooter">
					  <t:outputText id="harvardIdExpirationWarning" value="#{userViewer.harvardIdExpired ? 'Expired!' : userViewer.harvardIdDaysUntilExpiration}"/>
					</ui:define -->
    </ss:property>

    <ss:property id="harvardIdRequestedExpiration" type="Date"
      label="Harvard ID Requested Expiration Date"
      description="The requested date when the user's Harvard ID will expire"
      value="#{userViewer.entity.harvardIdRequestedExpirationDate}"
      rendered="#{userViewer.applicationProperties.facilityKey == 'iccbl' &amp;&amp; (userViewer.readAdmin || userViewer.me)}"
      editable="#{userViewer.editMode}">
    </ss:property>

    <ss:property id="gender" label="Gender"
        type="Vocabulary"
        editable="#{userViewer.editMode}"
        value="#{userViewer.gender.value}"
        selectItems="#{userViewer.gender.selectItems}" />

    <ss:property id="phone" label="Phone"
			description="The user's phone number"
			value="#{userViewer.entity.phone}" editable="#{userViewer.editMode}" />

		<ss:property id="mailingAddress" label="Mailing Address"
			type="Textarea" description="The user's mailing address"
			value="#{userViewer.entity.mailingAddress}"
			editable="#{userViewer.editMode}" editWidth="60" editHeight="4" />

		<ss:property id="comments" label="Comments" type="Textarea"
			description="Comments about this user"
			value="#{userViewer.entity.comments}"
			rendered="#{userViewer.readAdmin}" editable="#{userViewer.editMode}"
			editWidth="60" editHeight="4" />

		<ss:property id="classification" label="Classification"
			description="The user's classification"
			value="#{userViewer.entity.userClassification}"
			editable="#{userViewer.editMode &amp;&amp; !userViewer.entity.headOfLab}"
			converter="#{screeningRoomUserClassificationConverter}"
			required="true">
			<ui:define name="editableData">
				<t:selectOneMenu id="classificationMenu"
					value="#{userViewer.entity.userClassification}"
					converter="#{screeningRoomUserClassificationConverter}"
					required="true" styleClass="inputText selectMenu">
					<f:selectItems value="#{userViewer.userClassificationSelections}" />
				</t:selectOneMenu>
			</ui:define>
		</ss:property>

    <ss:property id="facilityUsageRoles" label="Facility Usage Roles"
      description="Record of what the user is doing at the facility"
      value="#{userViewer.entity.facilityUsageRoles}"
      rendered="#{userViewer.readAdmin || userViewer.me}">
      <ui:define name="data">
        <ss:collectionTable id="facilityUsageRolesTable"
          editable="#{userViewer.editMode}"
          dataModel="#{userViewer.facilityUsageRolesDataModel}"
          actionBean="#{userViewer}" addAction="addFacilityUsageRole"
          deleteAction="deleteFacilityUsageRole">
          <ui:define name="columns">
            <t:column>
              <t:outputText value="#{element.displayableName}"
                styleClass="dataText" />
            </t:column>
          </ui:define>
          <ui:define name="addProperties">
            <t:panelGrid columns="2">
              <ss:property id="newFacilityUsageRole"
                label="Facility Usage Role" editable="true">
                <ui:define name="editableData">
                  <t:selectOneMenu id="newFacilityUsageRole"
                    value="#{userViewer.newFacilityUsageRole.value}"
                    styleClass="inputText selectMenu">
                    <f:selectItems
                      value="#{userViewer.newFacilityUsageRole.selectItems}" />
                  </t:selectOneMenu>
                </ui:define>
              </ss:property>
            </t:panelGrid>
          </ui:define>
        </ss:collectionTable>
      </ui:define>
    </ss:property>

    <ss:property id="roles" label="Data Access Roles"
      description="The data access roles for this user"
      value="#{userViewer.entity.screensaverUserRoles}"
      rendered="#{userViewer.readAdmin ||userViewer.me}">
      <ui:define name="data">
        <ss:collectionTable id="rolesTable"
          editable="#{userViewer.editMode &amp;&amp; userViewer.screensaverUser.isUserInRoleOfNameMap['userRolesAdmin']}"
          emptyLabel="not yet specified"
          dataModel="#{userViewer.userRolesDataModel}"
          actionBean="#{userViewer}" addAction="addUserRole"
          deleteAction="deleteUserRole" confirmDelete="true">
          <ui:define name="columns">
            <t:column>
              <t:outputText value="#{element.displayableRoleName}"
                styleClass="dataText}" />
            </t:column>
          </ui:define>
          <ui:define name="addProperties">
            <t:panelGrid columns="2">
              <ss:property id="newrole" label="Role" editable="true">
                <ui:define name="editableData">
                  <t:selectOneMenu id="newUserRole"
                    value="#{userViewer.newUserRole.value}"
                    styleClass="inputText selectMenu">
                    <f:selectItems
                      value="#{userViewer.newUserRole.selectItems}" />
                  </t:selectOneMenu>
                </ui:define>
              </ss:property>
            </t:panelGrid>
          </ui:define>
        </ss:collectionTable>
      </ui:define>
    </ss:property>

    <ss:property id="labMembers" label="Lab Members"
        description="The other members of the lab this user belongs to, including the lab head"
        rendered="#{userViewer.screeningRoomUserViewMode &amp;&amp; (userViewer.readAdmin || userViewer.me) &amp;&amp; !userViewer.editMode}">
        <ui:define name="data">
          <t:collapsiblePanel var="isLabMembersCollapsed"
            value="#{userViewer.isPanelCollapsedMap['labMembers']}">
            <f:facet name="header">
              <t:headerLink immediate="true">
                <t:outputText id="labMembersToggleText"
                  value="#{isLabMembersCollapsed ? 'Show &gt;&gt;' : 'Hide &lt;&lt;'}"
                  styleClass="dataText" />
              </t:headerLink>
            </f:facet>
            <ss:collectionTable
              dataModel="#{userViewer.labMembersDataModel}">
              <ui:define name="columns">
                <t:column>
                  <f:facet name="header">
                    <t:outputText value="Lab Member" styleClass="label" />
                  </f:facet>
                  <t:div
                    styleClass="#{element == userViewer.entity ? 'subdued' : ''}">
                    <ss:user id="labMember" user="#{element}" />
                  </t:div>
                </t:column>
              </ui:define>
            </ss:collectionTable>
          </t:collapsiblePanel>
        </ui:define>
        <ui:define name="valueFooter">
          <t:commandButton id="browseLabMembers" value="Browse..."
            action="#{userViewer.browseLabMembers}"
            rendered="#{userViewer.labMembersDataModel.rowCount > 0}"
            styleClass="command" />
          <t:commandButton action="#{userViewer.addLabMember}"
            id="addLabMember" value="Add Lab Member"
            rendered="#{userViewer.screensaverUser.isUserInRoleOfNameMap['usersAdmin'] &amp;&amp; !userViewer.editMode &amp;&amp; userViewer.labHeadViewMode}"
            styleClass="command" />
        </ui:define>
      </ss:property>

      <ss:attachedFiles attachedFiles="#{userViewer.attachedFiles}"
        entityTypeName="screener"
        rendered="#{userViewer.editMode || userViewer.readAdmin}"
        adminOnly="true"
        editMode="#{userViewer.editMode}" />
        
  </ui:define>


  <ui:define name="tablesContent">
    <t:div rendered="#{!userViewer.editMode}">
      <ss:checklistItems checklistItems="#{userChecklistItems}" />
    </t:div>
  </ui:define>

	<ui:define name="footerContent">
		<ss:collapsiblePanel id="userScreenInfo" label="Screens"
			isCollapsed="#{userViewer.isPanelCollapsedMap['screens']}"
			rendered="#{userViewer.screeningRoomUserViewMode &amp;&amp; (userViewer.readAdmin || userViewer.me) &amp;&amp; !userViewer.editMode}">
			<ui:define name="content">
				<t:panelGrid id="screensPropertiesPanel" columns="2"
					columnClasses="propertyLabelColumn,column"
					styleClass="layoutPanel">

          <ss:property id="smallMoleculeScreens"
            label="Small Molecule Screens"
            description="The small molecule screens this user is associated with">
            <ui:define name="data">
              <t:collapsiblePanel var="isSmallMoleculeScreensCollapsed"
                value="#{userViewer.isPanelCollapsedMap['smallMoleculeScreens']}">
                <f:facet name="header">
                  <t:headerLink immediate="true">
                    <t:outputText id="SmallMoleculeScreensToggleText"
                      value="#{isSmallMoleculeScreensCollapsed ? 'Show &gt;&gt;' : 'Hide &lt;&lt;'}"
                      styleClass="dataText" />
                  </t:headerLink>
                </f:facet>
                <ss:userScreensTable
                  screensDataModel="#{userViewer.smallMoleculeScreensDataModel}"
                  screenTitleColumnHeader="A screen for compounds that..." />
              </t:collapsiblePanel>
            </ui:define>
            <ui:define name="valueFooter">
              <t:commandButton id="browseSmallMoleculeScreensCommand"
                value="Browse..."
                action="#{userViewer.browseSmallMoleculeScreens}"
                rendered="#{userViewer.smallMoleculeScreensDataModel.rowCount > 0}"
                styleClass="command" />
              <t:commandButton id="addSmallMoleculeScreenCommand"
                value="Add Small Molecule Screen..."
                action="#{userViewer.addSmallMoleculeScreen}"
                rendered="#{userViewer.screensaverUser.isUserInRoleOfNameMap['screensAdmin']}"
                styleClass="command" />
            </ui:define>
          </ss:property>

          <ss:property id="rnaiScreens" label="RNAi Screens"
            description="The RNAi screens this user is associated with">
            <ui:define name="data">
              <t:collapsiblePanel var="isRnaiScreensCollapsed"
                value="#{userViewer.isPanelCollapsedMap['rnaiScreens']}">
                <f:facet name="header">
                  <t:headerLink immediate="true">
                    <t:outputText id="rnaiScreensToggleText"
                      value="#{isRnaiScreensCollapsed ? 'Show &gt;&gt;' : 'Hide &lt;&lt;'}"
                      styleClass="dataText" />
                  </t:headerLink>
                </f:facet>
                <ss:userScreensTable
                  screensDataModel="#{userViewer.rnaiScreensDataModel}"
                  screenTitleColumnHeader="A screen for RNAi reagents that..." />
              </t:collapsiblePanel>
            </ui:define>
            <ui:define name="valueFooter">
              <t:commandButton id="browseRnaiScreensCommand"
                value="Browse..."
                action="#{userViewer.browseRnaiScreens}"
                rendered="#{userViewer.rnaiScreensDataModel.rowCount > 0}"
                styleClass="command" />
              <t:commandButton id="addRnaiScreenCommand"
                value="Add RNAi Screen..."
                action="#{userViewer.addRnaiScreen}"
                rendered="#{userViewer.screensaverUser.isUserInRoleOfNameMap['screensAdmin']}"
                styleClass="command" />
            </ui:define>
          </ss:property>

          <ss:property id="screenAssociates" label="Screen Associates"
            description="The collaborators, lead screeners, and lab heads of the screens that this user is associated with">
            <ui:define name="data">
              <t:collapsiblePanel var="isScreenAssociatesCollapsed"
                value="#{userViewer.isPanelCollapsedMap['screenAssociates']}">
                <f:facet name="header">
                  <t:headerLink immediate="true">
                    <t:outputText id="screenAssociatesToggleText"
                      value="#{isScreenAssociatesCollapsed ? 'Show &gt;&gt;' : 'Hide &lt;&lt;'}"
                      styleClass="dataText" />
                  </t:headerLink>
                </f:facet>
                <ss:collectionTable
                  dataModel="#{userViewer.screenAssociatesDataModel}">
                  <ui:define name="columns">
                    <t:column>
                      <f:facet name="header">
                        <t:outputText value="Screen Associate"
                          styleClass="label" />
                      </f:facet>
                      <ss:user id="screenAssociate" user="#{element}" />
                    </t:column>
                  </ui:define>
                </ss:collectionTable>
              </t:collapsiblePanel>
            </ui:define>
            <ui:define name="valueFooter">
              <t:commandButton id="browseScreenAssociates"
                value="Browse..."
                action="#{userViewer.browseScreenAssociates}"
                rendered="#{userViewer.screenAssociatesDataModel.rowCount > 0}"
                styleClass="command" />
            </ui:define>
          </ss:property>

        </t:panelGrid>
			</ui:define>
		</ss:collapsiblePanel>
    
		<ss:collapsiblePanel id="userActivities" label="Activities Summary"
			isCollapsed="#{userViewer.isPanelCollapsedMap['userActivities']}"
			rendered="#{userViewer.screeningRoomUserViewMode &amp;&amp; (userViewer.readAdmin || userViewer.me) &amp;&amp; !userViewer.editMode &amp;&amp; appInfo.applicationProperties.facilityKey != 'lincs'}">
      <ui:define name="content">
          <t:panelGrid columns="2"
            columnClasses="propertyLabelColumn,column"
            styleClass="layoutPanel" style="width: 100%">
            <ss:property id="activityCount" label="Activities">
              <ui:define name="data">
                <t:commandLink value="#{userViewer.userActivitiesCount}"
                  action="#{userViewer.browseUserActivities}" />
              </ui:define>
            </ss:property>
            <ss:propertyGroup label="Last Activity">
              <t:outputText value="&lt;none&gt;" styleClass="dataText"
                rendered="#{empty userViewer.lastUserActivity}" />
              <ss:property id="lastUserActivityDate" label="Date"
                value="#{userViewer.lastUserActivity.dateOfActivity}"
                type="Date"
                rendered="#{!empty userViewer.lastUserActivity}" />
              <ss:property id="lastUserActivityType" label="Activity Type"
                value="#{userViewer.lastUserActivity.activityTypeName}"
                type="Text"
                rendered="#{!empty userViewer.lastUserActivity}" />
              <ss:property id="lastUserActivityPerformedBy"
                label="Performed By"
                value="#{userViewer.lastUserActivity.performedBy.fullNameLastFirst}"
                type="Text"
                rendered="#{!empty userViewer.lastUserActivity}" />
            </ss:propertyGroup>
          </t:panelGrid>
      </ui:define>
    </ss:collapsiblePanel>

	</ui:define>

</ui:composition>

</html>
